@using System.Linq
@using System.Xml.Linq
@using Newtonsoft.Json
@using System.IO
@model (string token, Map map)

@{
	var map = Model.map;
	var token = Model.token;
	var w = map.Width * Map.CellSize;
	var h = map.Height * Map.CellSize;
	var isDmStr = ViewBag.LoadDmTools.ToString().ToLower();

	var hubargs = $"token={token}&dm={isDmStr}{(ViewBag.tokenName == null ? "" : $"&name={ViewBag.tokenName}")}".AsHtml();
	
	ViewData["Title"] = ViewBag.Token;
}

<div id="toolbox" class="fixed tr">
	<button id="cursor_button" class="bare">🖰</button>
@if(ViewBag.LoadDmTools)
{
	<button id="addtoken_button" class="bare">+</button>
	<button id="removetoken_button" class="bare">–</button>
	<button id="tileedit_button" class="bare">🖌</button>
	<button id="resize_button" class="bare">🗺️</button>
	<button id="effects_button" class="bare">🔥</button>
	<button id="hide_button" class="bare">👁️</button>
	<button id="spawnzone_button" class="bare">🏥</button>
	<button id="initiative_button" class="bare">⏱️</button>
	<button id="settings_button" class="bare">⚙️</button>
}
	<button id="shapes_button" class="bare">⬡</button>
	<button id="dice_button" class="bare">🎲</button>

@if(ViewBag.LoadDevTools) {
	<button id="debug_button" class="bare">💻</button>
}
</div>

@if(ViewBag.LoadDmTools)
{
	<div id="addtoken_window" class="hidden fixed br window">
		Name: <input id="addtoken_name" size="10" type="text" value="">
		Num: <input id="addtoken_num" size="3" min="1" type="number" value="1">
		<br/>
		Width: <input id="addtoken_width" size="1" min="1" type="number" value="1">
		Height: <input id="addtoken_height" size="1" min="1" type="number" value="1">
	</div>
	
	<div id="tileedit_window" class="hidden fixed br window">
		<input id="tileedit_color" type="color">
	</div>

	<div id="settings_window" class="hidden fixed br window">
		<a href="clone?token=@Model.token">Clone Map</a>
		<br/>
		√2 = <input id="setting_sqrt2_num" value="@map.Settings.Sqrt2Numerator" type="number" size="3" min="1">/
		<input id="setting_sqrt2_denom" value="@map.Settings.Sqrt2Denominator" type="number" size="3" min="1">
		<br/>
		<button onclick="toolbox.tools.settings.save()">Save</button>
	</div>

	<div id="resize_window" class="hidden fixed br window">
		<div class="ralign">
			Left:
			<input id="resize_left" size="4" value="0" type="number" oninput="toolbox.tools.resize.onInput('left')">
			<br/>
			Right:
			<input id="resize_right" size="4" value="0" type="number" oninput="toolbox.tools.resize.onInput('right')">
			<br/>
			Up:
			<input id="resize_up" size="4" value="0" type="number" oninput="toolbox.tools.resize.onInput('up')">
			<br/>
			Down:
			<input id="resize_down" size="4" value="0" type="number" oninput="toolbox.tools.resize.onInput('down')">
		</div>
		<p id="resize_error" class="hidden error"></p>
		<br/>
		<button id="resize_savebutton" onclick="toolbox.tools.resize.save()">Save</button>
	</div>

	<div id="effects_window" class="ralign hidden fixed br window">
	</div>

	<div id="initiative_window" class="malign hidden fixed br window">
		<ul id="initiative_list" class="ralign"></ul>
		<label for="initiative_mod">Init. Mod:</label>
		<input type="number" class="slimInput" id="initiative_mod" size="1" min="-5" max="10" value="0">
		<br/>
		<button class="bare" id="initiative_nextbutton">▶️</button>
	</div>
}

@if(ViewBag.LoadDevTools) {
	<div id="debug_window" class="ralign hidden fixed br window">
		<button id="debug_save">Save</button>
		<br/>
		<button id="debug_debug">Debug</button>
		<br/>
		<button id="debug_resync">Resync</button>
		<br/>
		<button id="debug_redraw">Redraw</button>
	</div>
}

<div id="shapes_window" class="hidden fixed br window">
	<select id="shapes_selection">
	</select>
</div>
<div id="dice_window" class="hidden lalign fixed br window">

</div>

<div id="contextmenu" class="fixed window" style="visibility: hidden;">
	<button id="contextmenu_delete" class="bare">🗑️</button>
	<button id="contextmenu_clean" class="bare">🧼</button>
	<button id="contextmenu_hide" class="bare">👁️</button>
	<button id="contextmenu_initiative" class="bare">⏱️</button>
</div>

<div id="distance" class="fixed bl"></div>

<div id="canvas_stack">
	<canvas id="tile_layer" width="@w" height="@h" ></canvas>
	<canvas id="grid_layer" width="@w" height="@h" ></canvas>
	<canvas id="effect_layer" width="@w" height="@h" ></canvas>
	<canvas id="token_layer" width="@w" height="@h" ></canvas>
	<canvas id="highlight_layer" width="@w" height="@h" ></canvas>
	<canvas id="special_layer" width="@w" height="@h" ></canvas>
</div>

@section head
{
	<link rel="stylesheet" href="~/css/map.css" />
}

@section scripts
{
	<script>
		const map = @Model.map.FieldData(MapFields.All).json.AsHtml()

		map.id = "@token"

		const isDM = @isDmStr
		const cellSize = @Map.CellSize;
		const huburl = "/mapHub?@hubargs"
		var w = @w
		var h = @h
	</script>

	<script src="~/js/signalr/dist/browser/signalr.js"></script>
	<script src="~/js/cookies.js"></script>
	<script src="~/js/map.common.js"></script>
	<script src="~/js/map.js"></script>
	<script src="~/js/map.hub.js"></script>
	<script src="~/js/map.ui.js"></script>
	<!--<script src="~/js/maphub.js"></script> -->
}