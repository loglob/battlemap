@using System.Linq
@using System.Xml.Linq
@using Newtonsoft.Json
@using System.IO
@model (string token, Map map)

@{
	var map = Model.map;
	var token = Model.token;
	var w = map.Width * Map.CellSize;
	var h = map.Height * Map.CellSize;
}

<div id="canvas_stack">
	<canvas id="tile_layer" width="@w" height="@h" ></canvas>
	<canvas id="grid_layer" width="@w" height="@h" ></canvas>
	<canvas id="effect_layer" width="@w" height="@h" ></canvas>
	<canvas id="token_layer" width="@w" height="@h" ></canvas>
	<canvas id="highlight_layer" width="@w" height="@h" ></canvas>
	<canvas id="special_layer" width="@w" height="@h" ></canvas>
</div>


@{
	ViewData["Title"] = ViewBag.Token;
	var colors = string.Join(",\n",
		map.Colors
			.Unwrap()
			.Select(row => $"[{string.Join(", ", row.Select(c => c.ToString()))}]")
	).AsHtml();
	var tokens = string.Join(",\n",
		map.Tokens.Select(t => JsonConvert.SerializeObject(t))
	).AsHtml();

	var effects = map.Effects.ToJson().AsHtml();
}

@section head
{
	<link rel="stylesheet" href="~/css/map.css" />
}

@section scripts
{
	<script>
		const map = @Model.map.FieldData(MapFields.All).json.AsHtml()

		map.id = "@token"

		const cellSize = @Map.CellSize;
		const huburl = "/mapHub?token=@token"
		var w = @w
		var h = @h
		const isDM = false
	</script>

	<script src="~/js/signalr/dist/browser/signalr.js"></script>
	<script src="~/js/map.common.js"></script>
	<script src="~/js/map.js"></script>
	<script src="~/js/map.hub.js"></script>
	<!--<script src="~/js/maphub.js"></script> -->
}